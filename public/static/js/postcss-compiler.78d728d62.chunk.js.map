{"version":3,"sources":["webpack:////Users/leo.yi/Developer/codesandbox-client/standalone-packages/codesandbox-browserfs/dist/shims/buffer.js","webpack:///./node_modules/postcss-url/src/type sync ^\\.\\/.*$","webpack:///./src/sandbox/eval/transpilers/postcss/loader.ts","webpack:///./src/sandbox/eval/utils/is-dependency-path.ts"],"names":["module","exports","BrowserFS","BFSRequire","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","resolveCSSFile","_x","_x2","_x3","_resolveCSSFile","apply","arguments","_asyncToGenerator","loaderContext","path","basePath","isDependencyPath","pkgJson","resolveTranspiledModuleAsync","join","parsedPkg","JSON","parse","style","fullPath","charAt","_ref","plugins","postcssImportPlugin","_ref2","root","sanitizedPath","replace","_x6","_x7","load","_ref3","filename","_x8","postcssUrl","url","options","to","from","inline","annotation","result","postcss","process","undefined","messages","Promise","all","_ref4","m","type","addDependency","file","_x9","toJSON","transpiledCode","css","sourceMap","_x4","_x5","p","test"],"mappings":"mJAAAA,EAAOC,QAAUC,UAAUC,WAAW,W,gFCAtC,IAAIC,EAAM,CACT,SAAU,8CACV,YAAa,8CACb,WAAY,gDACZ,cAAe,gDACf,WAAY,gDACZ,cAAe,gDACf,WAAY,gDACZ,cAAe,iDAIhB,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBR,EAAOC,QAAUI,EACjBA,EAAeE,GAAK,iE,2bCzBqD,SAI1DU,EAAcC,EAAAC,EAAAC,GAAA,OAAAC,EAAAC,MAAC,KAADC,WAAA,SAAAF,IA6B5B,OA7B4BA,EAAAG,KAA7B,UACEC,EACAC,EACAC,GAIA,GAFqBC,YAAiBF,GAEpB,CAEhB,IACE,MAAMG,QAAgBJ,EAAcK,6BAClCC,eAAKL,EAAM,iBAEPM,EAAYC,KAAKC,MAAML,EAAQ7B,OAAOa,MAE5C,GAAImB,EAAUG,MAAO,CACnB,MAAMC,EAAWL,eAAKL,EAAMM,EAAUG,OAEtC,OAAOV,EAAcK,6BAA6BM,IAEpD,MAAOzB,IAIT,OAAOc,EAAcK,6BAA6BJ,GAGpD,MAAMU,EAA8B,MAAnBV,EAAKW,OAAO,GAAaX,EAAOK,eAAKJ,EAAUD,GAChE,OAAOD,EAAcK,6BAA6BM,OACnDd,MAAA,KAAAC,WAgEA,SAAAe,IAAA,OAAAA,EAAAd,KA9Dc,UACbX,EACAY,GAEA,MAAMc,EAAU,CACdC,IAAoB,CAClBxB,SAAOyB,EAAAjB,KAAE,UAAOjB,EAAYmC,GAC1B,IAEE,MAAMC,EAAgBpC,EAAGqC,QAAQ,KAAM,IAOvC,aANqB3B,EACnBQ,EACAkB,EACAD,IAGY1C,OAAO0B,KACrB,MAAOf,GACP,OAAO,SAEV,SAAAkC,EAAAC,GAAA,OAAAL,EAAAnB,MAAA,KAAAC,aACDwB,MAAIC,EAAAxB,KAAE,UAAOyB,GAKX,aAJsBxB,EAAcK,6BAClCmB,IAGajD,OAAOa,QACvB,SAAAqC,GAAA,OAAAF,EAAA1B,MAAA,KAAAC,eAEH4B,IAAW,CACTC,IAAK,YATA,IAADJ,EAfGP,EA4BX,MAAMY,EAA0B,CAC9BC,GAAI7B,EAAcC,KAClB6B,KAAM9B,EAAcC,KACpBtB,IAAK,CACHoD,QAAQ,EACRC,YAAY,IAKVC,QAAeC,IAAQpB,GAASqB,QAC3B,OAAT/C,OAAgBgD,EAAYhD,EAC5BwC,GAEF,GAAIK,EAAOI,SAAU,CACnB,MAAMA,EAAWJ,EAAOI,eAClBC,QAAQC,IACZF,EAAS1D,IAAG,eAAA6D,EAAAzC,KAAC,UAAM0C,GACF,eAAXA,EAAEC,aACE1C,EAAc2C,cAAcF,EAAEG,UAEvC,gBAAAC,GAAA,OAAAL,EAAA3C,MAAA,KAAAC,YAJW,KAQhB,MAAMnB,EAAMsD,EAAOtD,KAAOsD,EAAOtD,IAAImE,SAErC,MAAO,CAAEC,eAAgBd,EAAOe,IAAKC,UAAWtE,OACjDkB,MAAA,KAAAC,WA9Dc,mBAAfoD,EAAAC,GAAA,OAAAtC,EAAAhB,MAAA,KAAAC,a,8ECvCA,kCAAO,MAAMK,EAAoBiD,GAAc,eAAeC,KAAKD,I","file":"static/js/postcss-compiler.78d728d62.chunk.js","sourcesContent":["module.exports = BrowserFS.BFSRequire('buffer');\n","var map = {\n\t\"./copy\": \"./node_modules/postcss-url/src/type/copy.js\",\n\t\"./copy.js\": \"./node_modules/postcss-url/src/type/copy.js\",\n\t\"./custom\": \"./node_modules/postcss-url/src/type/custom.js\",\n\t\"./custom.js\": \"./node_modules/postcss-url/src/type/custom.js\",\n\t\"./inline\": \"./node_modules/postcss-url/src/type/inline.js\",\n\t\"./inline.js\": \"./node_modules/postcss-url/src/type/inline.js\",\n\t\"./rebase\": \"./node_modules/postcss-url/src/type/rebase.js\",\n\t\"./rebase.js\": \"./node_modules/postcss-url/src/type/rebase.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/postcss-url/src/type sync recursive ^\\\\.\\\\/.*$\";","import postcss, { ProcessOptions } from 'postcss';\nimport postcssImportPlugin from 'postcss-import';\nimport postcssUrl from 'postcss-url';\nimport { join } from 'path';\nimport { isDependencyPath } from 'sandbox/eval/utils/is-dependency-path';\n\nimport { LoaderContext, TranspiledModule } from 'sandpack-core';\n\nasync function resolveCSSFile(\n  loaderContext: LoaderContext,\n  path: string,\n  basePath: string\n): Promise<TranspiledModule> {\n  const isDependency = isDependencyPath(path);\n\n  if (isDependency) {\n    // First try to resolve the package.json, in case it has a style field\n    try {\n      const pkgJson = await loaderContext.resolveTranspiledModuleAsync(\n        join(path, 'package.json')\n      );\n      const parsedPkg = JSON.parse(pkgJson.module.code);\n\n      if (parsedPkg.style) {\n        const fullPath = join(path, parsedPkg.style);\n\n        return loaderContext.resolveTranspiledModuleAsync(fullPath);\n      }\n    } catch (e) {\n      /* Move to step 2 */\n    }\n\n    return loaderContext.resolveTranspiledModuleAsync(path);\n  }\n\n  const fullPath = path.charAt(0) === '/' ? path : join(basePath, path);\n  return loaderContext.resolveTranspiledModuleAsync(fullPath);\n}\n\nexport default async function (\n  code: string,\n  loaderContext: LoaderContext\n): Promise<{ transpiledCode: string; sourceMap: any }> {\n  const plugins = [\n    postcssImportPlugin({\n      resolve: async (id: string, root: string) => {\n        try {\n          // Angular specific, remove the ~ from the path to determine if it's a dependency\n          const sanitizedPath = id.replace(/^~/, '');\n          const result = await resolveCSSFile(\n            loaderContext,\n            sanitizedPath,\n            root\n          );\n\n          return result.module.path;\n        } catch (e) {\n          return null;\n        }\n      },\n      load: async (filename: string) => {\n        const tModule = await loaderContext.resolveTranspiledModuleAsync(\n          filename\n        );\n\n        return tModule.module.code;\n      },\n    }),\n    postcssUrl({\n      url: 'rebase',\n    }),\n  ];\n\n  const options: ProcessOptions = {\n    to: loaderContext.path,\n    from: loaderContext.path,\n    map: {\n      inline: true,\n      annotation: true,\n    },\n  };\n\n  // Explicitly give undefined if code is null, otherwise postcss crashes\n  const result = await postcss(plugins).process(\n    code === null ? undefined : code,\n    options\n  );\n  if (result.messages) {\n    const messages = result.messages as any[];\n    await Promise.all(\n      messages.map(async m => {\n        if (m.type === 'dependency') {\n          await loaderContext.addDependency(m.file);\n        }\n      })\n    );\n  }\n\n  const map = result.map && result.map.toJSON();\n\n  return { transpiledCode: result.css, sourceMap: map };\n}\n","export const isDependencyPath = (p: string) => /^(\\w|@\\w|@-)/.test(p);\n"],"sourceRoot":""}